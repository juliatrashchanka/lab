#include <iostream>
#include <string.h>
#include <iomanip>
#include <stdlib.h>
#include <windows.h>

using namespace std;

class Virus
{

	string simmkaps;//симметрия капсоидов 
	string nalob;// наличие оболочки капсидов

public:
	Virus(string simmkaps = "", string nalob = "");
	string setSimmkaps();
	string setNalob();

};
Virus::Virus(string sim, string nal) // конструктор
{
	simmkaps = sim;
	nalob = nal;
}

string Virus::setSimmkaps()
{
	return simmkaps;
}

string Virus::setNalob()
{
	return nalob;
}

class Desoksivirus : public Virus
{
protected:
	int kolvocepey;
	string typekisl;//тип кислоты (dc or cc)
public:
	Desoksivirus(string sim = "", string nal = "", int kolvo = 0, string type = "") : Virus(sim, nal)
	{
		kolvocepey = kolvo;
		typekisl = type;
	}
	void Print();

};
void Desoksivirus::Print()
{
	cout << "Симметрия капсоидов: " << setSimmkaps() << ";\nНаличие оболочки капсидов: " << setNalob() << ";\nКоличество цепей ДНК: " << kolvocepey << ";\nТип нуклеиновой кислоты: " << typekisl << endl;
}

class Rybovirus : public Virus
{
protected:
	int gruppa;
	string bolezn;
public:
	Rybovirus(string sim = "", string nal = "", int grup = 0, string bol = "") : Virus(sim, nal)
	{
		gruppa = grup;
		bolezn = bol;
	}
	void Print();

};
void Rybovirus::Print()
{
	cout << "Симметрия капсоидов: " << setSimmkaps() << ";\nНаличие оболочки капсидов: " << setNalob() << ";\nГруппа: " << gruppa << ";\nЗаболевание: " << bolezn << endl;
}
class Unknow : public Virus
{
protected:
	int lifetime;
	string yearofo;//тип кислоты (dc or cc)
public:
	Unknow (string sim = "", string nal = "", int lt = 0, string yofo = "") : Virus(sim, nal)
	{
		lifetime = lt;
		yearofo = yofo;
	}
	void Print();

};
void Unknow::Print()
{
	cout << "Симметрия капсоидов: " << setSimmkaps() << ";\nНаличие оболочки капсидов: " << setNalob() << ";\nПродолжительность жизни: " << lifetime << ";\nГод открытия: " << yearofo << endl;
}

string correctString()
{
	bool tr;
	string str;
	do
	{
		tr = false;
		cin >> str;
		for (int i = 0; i < str.length(); i++)
		{
			if ((str[i] < 'А' || str[i] > 'я') )//&&(str[i] < 'а' && str[i] > 'я'))
			{
				tr = true;
				cout << "Некорректный ввод строки!\nПопробуйте снова: ";
				cout << str;
				break;
			}
		}
	} while (tr);

	return str;
}

int Number()
{
	int number;
	cin >> number;

	while (cin.get() != '\n')
	{
		cout << "Некорректный ввод!" << endl;
		cout << "Введите снова: ";
		cin.clear();
		cin.ignore(256, '\n');
		cin >> number;
	}

	return number;
}

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	setlocale(LC_ALL, "rus");
	int exit = true;
	while (exit)
	{
		int menu;
		cout << "------------МЕНЮ------------" << endl;
		cout << "(1) Рибовирус" << endl;
		cout << "(2) Дезоксивирус" << endl;
		cout << "(3) Неизвестный" << endl;
		cout << "(4) Выйти из программы" << endl;

		cout << "Введите: ";
		menu = Number();
		//cin >> menu;
		system("cls");
		switch (menu)
		{
		case 1:
		{
			int grup;
		    string sim, nal, bol;
			cout << "Введите симметрию капсоидов: "; sim= correctString();
			cout << "Введите наличие оболочки капсидов (отсутствует или имеется): ";  nal= correctString();
			cout << "Введите группу: "; grup = Number();;
			cout << "Введите заболевание: "; bol= correctString();
			system("cls");
			Rybovirus r1(sim, nal, grup, bol);
			r1.Print();
			system("pause");
			system("cls");
		}; break;
		case 2:
		{
			int kolvo;
			string sim, nal, type;	
			cout << "Введите симметрию капсоидов: "; sim = correctString();
			cout << "Введите наличие оболочки капсидов (отсутствует или имеется): ";  nal = correctString();
			cout << "Введите количество цепей ДНК: ";  kolvo= Number();
			cout << "Введите тип нуклеиновой кислоты: "; type = correctString();
			system("cls");
			Desoksivirus d1(sim, nal, kolvo, type);
			d1.Print();
			system("pause");
			system("cls");
		}; break;
		case 3:
		{
			int lt;
			string sim, nal, yofo;
			cout << "Введите симметрию капсоидов: "; sim = correctString();
			cout << "Введите наличие оболочки капсидов (отсутствует или имеется): ";  nal = correctString();
			cout << "Укажите продолжительность жизни (в сутках):";  lt= Number();
			cout << "Укажите год открытия:";  yofo = correctString();
			system("cls");
			Unknow u1(sim, nal, lt, yofo);
			u1.Print();
			system("pause");
			system("cls");
		}; break;
		case 4:// exit
		{
			exit = false;
		}; break;
		default:
			break;
		}

	}
}

